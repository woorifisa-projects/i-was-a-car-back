name: CI

on:
  push:
    branches: [ develop ]
#  pull_request:
#    branches: [ 'feature/**', 'refactor/**', 'fix/**', 'chore/**' ]

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      ## application properties
      - name: make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.PROPERTIES }}" > ./application.yml
        shell: bash
      ## application properties for test
      - name: make application.yml for test
        run: |
          cd ./src/test/resources
          touch ./application.yml
          echo "${{ secrets.TEST_PROPERTIES }}" > ./application.yml
        shell: bash

      - name: Get Github Actions IP
        if: contains(github.ref, 'develop')
        id: ip
        uses: haythem/public-ip@v1.3

      # For Redis
      - name: Configure AWS Credentials
        if: contains(github.ref, 'develop')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security group
        if: contains(github.ref, 'develop')
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 6379 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # Gradle build
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean build

      - name: Remove Github Actions IP From Security Group
        if: contains(github.ref, 'develop')
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 6379 --cidr ${{ steps.ip.outputs.ipv4 }}/32
