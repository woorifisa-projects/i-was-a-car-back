buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "2.7.14"
    id "io.spring.dependency-management" version "1.0.15.RELEASE"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = "xyz.iwasacar"
version = "0.0.1-SNAPSHOT"

java {
    sourceCompatibility = "11"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

ext {
    snippetsDir = file("build/generated-snippets")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0"

    implementation "com.amazonaws:aws-java-sdk-s3:1.12.440"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
//    modules {
//        module("org.springframework.boot:spring-boot-starter-logging") {
//            replacedBy("org.springframework.boot:spring-boot-starter-log4j2")
//        }
//    }
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-swagger2:3.0.0'


    implementation "org.mindrot:jbcrypt:0.4"
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    runtimeOnly "com.mysql:mysql-connector-j"
    runtimeOnly "com.h2database:h2"
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"


    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"


    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly "com.h2database:h2"
}

tasks.named("test") {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath

}
